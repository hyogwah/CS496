ARITH

Syntax
- Concrete syntax: rules that determine syntactically correct programs. BNF grammar.
- Abstract syntax: AST or parse tree. Algebraic Data Types. 

Semantics
- Specification
* Evaluation judgements
* Evaluation rules
- Implementation

Evaluation judgement for ARITH
( when you run e you get back r )

e ⬇ r

e is our code (AST/parse tree) => program
r is the result

Evaluation judgement: yes. Valid: no

Int 7 ⬇ 3
Sub(Int 4, Int 2) ⬇ 1
Div(Int 4, Int 0) ⬇ error

Valid yes:
Sub(Int 4, Int 2) ⬇ 2

Example of parse tree:

-----------EInt  ----------- EInt
Int 4 ⬇ 4       Int 2 ⬇ 2     4-2 
----------------------- ESub
Sub(Int 4, Int 2) ⬇ 1


Number == Express value
